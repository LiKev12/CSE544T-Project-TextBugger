
TODO: 04/15


- Figure 3:
    > Plot of word importances in a sentence (easy) KL

- Table 2:
    > CNN Model
    > LSTM Model
    > FGSM+NNS
    > DeepFool+NNS

- Table 3:
    > DeepWordBug
    > Various target models (let's pick 5):
        > Google Cloud NLP
        > IBM Watson
        > Microsoft Azure
        > Amazon AWS
        > Facebook fastText

- Figure 4:
    > Metrics vs. # of words in document
        > Success Rate
        > Change in Score
        > Time
    
- Figure 5:
    > Blackbox model evaluation
        > Attacks against:
            > Google NLP
            > IBM Watson
            > Microsoft Azure
            > AWS
            > fastText


- Figure 6-9:
    > Different similarity metrics
        > Edit Distance
        > Jaccard Coefficient
        > Euclidean Distance


Toxic Content Detection
    > Kaggle dataset
    > LR, CNN, LSTM models
    

- KL
    > Datasets
    >



- RY




















03/06/2020
- RY:
    > Choose 1 model, 1 attack
    > If stuck, start on report
    > 
    >


- KL:
    > Jacobian => Whitebox Algo => Random
    > Finish glove_imdb, glove_rt
    > LSTM ? (Download python3.7)
    > Clustering for fast similarity
    > 








02/28/2020
- Optimize generate_bugs.py to not take so long (maybe precompute the nearest neighbors for each word)
- 3 Baseline algorithms
    - Random
    - FGSM + NNS
    - DeepFool + NNS
- 3 Targeted Models
    - LR
    - Kim's CNN (Paper 17)
    - LSTM (Paper 38) **RY- Sentiment_Analysis/White_Box/Models
- Get Datasets
    - IMDB
    - Rotten Tomatoes MR







